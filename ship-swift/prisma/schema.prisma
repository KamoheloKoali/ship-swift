generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model clients {
  Id             String           @id
  email          String           @unique
  phoneNumber    String
  firstName      String
  lastName       String
  photoUrl       String
  idPhotoUrl     String
  dateCreated    DateTime         @default(now())
  dateUpdated    DateTime         @updatedAt
  Contacts       Contacts[]
  courierJobs    CourierJobs[]
  driverRequests DriverRequests[]
  Messages       Messages[]
  Messages       Messages[]
  clientRequests clientRequests[]
}

model Drivers {
  Id             String           @id
  email          String           @unique
  phoneNumber    String?
  firstName      String
  lastName       String
  photoUrl       String
  idPhotoUrl     String
  vehicleType    String?
  dateCreated    DateTime         @default(now())
  dateUpdated    DateTime         @updatedAt
  discPhotoUrl   String?
  VIN            String?
  discExpiry     String?
  idNumber       String?
  licensePhotoUrl String?
  licenseExpiry  String?
  licenseNumber  String?
  plateNumber    String?
  location       String?
  isVerified    Boolean          @default(false)
  Contacts       Contacts[]
  driveRequests  DriverRequests[]
  Messages       Messages[]
  clientRequests clientRequests[]
}

model CourierJobs {
  Id                 String   @id @default(uuid())
  Title              String?  @default("")
  Description        String?  @default("")
  Budget             String?  @default("0")
  clientId           String
  DropOff            String?  @default("")
  districtDropOff    String?  @default("")
  PickUp             String?  @default("")
  districtPickUp     String?  @default("")
  parcelSize         String?  @default("")
  pickupPhoneNumber  String?  @default("")
  dropoffPhoneNumber String?  @default("")
  dropOffEmail       String?  @default("")
  collectionDate     DateTime @default(now())
  dateCreated        DateTime @default(now())
  packageStatus      String?  @default("")

  client clients @relation(fields: [clientId], references: [Id])
}

model DriverRequests {
  Id         String  @id @default(uuid())
  receiverId String
  senderId   String
  isAccepted Boolean @default(false)
  isPending  Boolean @default(false)
  receiver   clients @relation(fields: [receiverId], references: [Id])
  sender     Drivers @relation(fields: [senderId], references: [Id])
}

model clientRequests {
  Id         String  @id @default(uuid())
  senderId   String
  receiverId String
  isAccepted Boolean @default(false)
  isPending  Boolean @default(false)
  receiver   Drivers @relation(fields: [receiverId], references: [Id])
  sender     clients @relation(fields: [senderId], references: [Id])
}

model UserRole {
  userId String  @id
  driver Boolean @default(false)
  client Boolean @default(false)
}

model Contacts {
  Id             String  @id @default(uuid())
  driverId       String
  clientId       String
  isConversating Boolean @default(false)
  client         clients @relation(fields: [clientId], references: [Id])
  driver         Drivers @relation(fields: [driverId], references: [Id])
}

model Messages {
  Id       String  @id @default(uuid())
  message  String
  driverId String
  clientId String
  senderId String
  client   clients @relation(fields: [clientId], references: [Id])
  driver   Drivers @relation(fields: [driverId], references: [Id])
}
